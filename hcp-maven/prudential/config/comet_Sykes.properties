##
## Source file configuration for COMET (CustOm Metadata Extraction Tool) program.
##

# [Required] Comma separated list of Local path to the director(ies) that contains
#   the data to ingest. 
#
#   For example, a value of "SampleData/SubDir1,SampleData/SubDir2" will cause each
#    iteration to scan the folders in the order provided before proceeding to another
#    iteration loop, if configured.
#
#   Note: The value of source.paths will not be considered part of the path created
#         on HCP unless the destination.appendSourcePathTrailingFolder is configured.
#source.items=PrudentialData/NonSameDir
source.items=${DATA_FOLDER}

# [Optional] Comma separated list of local paths to folders that are sub-
#   folders of the corresponding entry in the source.paths element.  When
#   scanning the source.paths element, it will not start processing files
#   into HCP until the corresponding folder entry in this list has been 
#   reached. If there is no corresponding entry in this list, it will process
#   all files into HCP.
#
#   NOTES: 
#     * This list can have less elements than the source.paths list. In that
#       event any missing elements will be consider as if not specified.
#     * If there are more entries in this list than source.paths list, they
#       will be ignored.
#     * To specify no corresponding element in this list, an empty value can
#       be specified.  For example "SampleData/Subdir1,,SampleData/SubDir2".
#
#source.startTriggerItems=C:\\hds-data\\PrudSykes\\TestData\\SykesData\\NICECalls\\InboundCalls\\HDD7\\DAY14_APR5_2012\\PM\\11220201_APR30_MAY07_2008_CD415

##
## HCP Destination information. 
##

# [Required] HCP Data Access User to use for ingest.
destination.user=${HCP_USER}

# [Required] HCP Data Access Password for destination.user account.
destination.password=${HCP_ENC_PWD}

# Indication if the destination.password value is encoded in md5 format. [Default: "false"]
destination.passwordEncoded=true

# [Required] Root Path REST URL to HCP to place content. 
# Note:  This must be properly URL encoded.  That is any spaces or special characters,
#        must be encoded in UTF-8 form.
destination.rootPath=https://${HCP_NAMESPACE_NAME}.${HCP_TENANT_NAME}.${HCP_DNS_NAME}/rest

# [Optional] Indicate whether the trailing folder of the source.paths entry should be
#  appended to the destination.rootPath when writing to HCP. 
#  For example, if source.paths=SampleData/SubDir1 is specified, all destination paths
#  as specified by destination.rootPath will also have "SubDir1" appended.
#  [Default false]
#destination.appendSourcePathTrailingFolder=true

##
## Source/Scanner/Processor Module information
##

# [Required] The class name that to contain the source.items and folderStartItems.
#    It must match the work item class used in the scanner.class processing code.
#    It also must be derived from BaseWorkItem class.
source.class=com.hds.hcp.tools.comet.FileSystemItem

# [Required] Java class to use for scanning the source content for processing.
scanner.class=com.hds.hcp.tools.comet.scanner.FileSystemScanner

# [Required] Java class to use for processing the content provided by the scanner
processor.class=com.hds.hcp.tools.comet.processor.ProcessorToHCP
#processor.class=com.hds.hcp.tools.comet.processor.ProcessorEcho

##
## Metadata Generation Module information
##

# [Required] Comma separated list of class(es) to load to extract metadata from files.
generator.classes=com.prudential.comet.generator.SCFiles,com.prudential.comet.generator.PrudownloaderInDirFiles,com.prudential.comet.generator.SykesPruFiles,com.prudential.comet.generator.LoggerType1NoMappingFile,com.prudential.comet.generator.LoggerType2NoMappingFile,com.prudential.comet.generator.LoggerWithAltDir

##
## General Execution Parameters.
##

# Number of times to load up the batch with files to process.
#  This value is only read once at the beginning of execution.
# [Default: -1 (infinite)]
execution.loopCount=1

# Number of seconds to sleep at end of batch run before attempting another batch.
# [Default: 60]
execution.loopSleepInSeconds=5

# Name of file in process local directory to watch for to indicate to stop processing
#  [Default: ingestor.stop]
#execution.stopRequestFile=ingestor.stop

# Name of file on local machine to watch for to indicate to stop processing.
#  For as long as file exists, the program will be paused. Delete the file to resume.
#  Changing this value while program is in the paused state will not cause the new
#  value to be used until resumed.
#  [Default: ingestor.pause]
#execution.pauseRequestFile=ingestor.pause

# Number of seconds to sleep during pause for between checks for resume.
# [Default: 10]
execution.pauseSleepInSeconds=5

# Number of items to process before reporting on updated statistics count.
# [Default: 1000]
#execution.statsReportingThreshold=50

# Indicate whether HTTP headers should be written to the console (stdout)
# [Default: false]
execution.debugging.httpheaders=true

# Number of milliseconds for the main thread sleep duration while waiting
#   for final scanner items to complete processing by the scanner thread(s).
#   In between waking up, it will check to see if a stop/pause was requested.
# [Default: 500 milliseconds (1/2 second)]
#execution.completionPollSleep=2000

# Maximum number of threads to start as scanner threads.  Scanner threads are
#   responsible for scanning the source.paths entries. Each item in source.paths
#   will be fed to a single thread.
#   If there are less threads configured here than source.path entries, only the
#   number of required threads will be started.
# [Default: 5]
#execution.scanner.maxThreadCount=10

# Number of Scanner Work Items allowed to be queued for processing to the
#   Scanner Thread pool.
#   If the queue is full, the main line thread will hang on waiting to add
#   another item.
# [Default: 100]
#execution.scanner.taskQueueSize=10

# Indicate whether the source files should be deleted after written to HCP.
#   If the file does not have correct permissions, an attempt to change and
#   try again.
# [Default: false]
#execution.scanner.deleteSourceItems=true

# Maximum number of seconds to wait for the Scanner to successfully submit the
#   item to the processor queue. This value will allow for the Scanner Thread
#   to not block for a long time when the processor queue is full when it could
#   just as well process completion statuses.  Also makes sure that a deadlock
#   does not occur where the completion queue is full and blocking all the
#   processors from completing and working on another item.
# [Default: 2 seconds]
#execution.scanner.maxSubmitWaitTimeInSeconds=5

# Number of milliseconds for the scanner thread sleep duration while waiting
#   for final items to complete processing by the process thread(s).
# [Default: 500 milliseconds (1/2 second)]
#execution.scanner.completionPollSleep=2000

# Number of successive work items the scanner is allowed to submit to the
#   processor before the scanner thread should check for any completion queue
#   items to process.
# [Default: 50 ]
#execution.scanner.checkCompleteQueueThreshold=10

# Maximum Number of submitted items by scanner to processor that should be allowed
#   to be outstanding without checking for processing completed items. 
#   NOTE: Once all items for a scanner have been submitted, all remaining processing
#         items will be processed when they complete.
# [Default: 100 ]
#execution.scanner.completionProcessingThreshold=50

# Maximum number of seconds to wait for a scanner thread terminate when the threads
#   are asked to stop.
# [Default: 20]
#execution.scanner.maxJoinWaitInSeconds=10

# For simulated load testing.  Will cause the scanner to sleep between each item thus
#   thus slowing down processing.
# [Default: 0]
#execution.scanner.loadTesting.threadSleep=2000

# Number of threads to start as worker threads.  Worker threads are responsible for 
#   processing work items by generating metadata and writing content to HCP.
# [Default: 25]
execution.processor.threadCount=1

# Number of Processor Work Items allowed to be queued for processing to the
#   Processor Thread pool.
#   If the queue is full, the scanner threads will hang on waiting to add
#   another item.
# [Default: 1000]
#execution.processor.taskQueueSize=10

# Maximum number of seconds to wait for a processor thread terminate when the threads
#   are asked to stop.
# [Default: 20]
#execution.processor.maxJoinWaitInSeconds=10

# For simulated load testing.  Will cause the processor to sleep between each item thus
#   thus slowing down processing.
# [Default: 0]
#execution.processor.loadTesting.threadSleep=2000

